// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// Backtrack
int Backtrack(IntegerVector RCV, int end);
RcppExport SEXP _dbh_Backtrack(SEXP RCVSEXP, SEXP endSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type RCV(RCVSEXP);
    Rcpp::traits::input_parameter< int >::type end(endSEXP);
    rcpp_result_gen = Rcpp::wrap(Backtrack(RCV, end));
    return rcpp_result_gen;
END_RCPP
}
// RejsBH
IntegerVector RejsBH(IntegerVector posit, IntegerVector sgn, IntegerVector RCV, IntegerVector avals);
RcppExport SEXP _dbh_RejsBH(SEXP positSEXP, SEXP sgnSEXP, SEXP RCVSEXP, SEXP avalsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type posit(positSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type sgn(sgnSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type RCV(RCVSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type avals(avalsSEXP);
    rcpp_result_gen = Rcpp::wrap(RejsBH(posit, sgn, RCV, avals));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_dbh_Backtrack", (DL_FUNC) &_dbh_Backtrack, 2},
    {"_dbh_RejsBH", (DL_FUNC) &_dbh_RejsBH, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_dbh(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
